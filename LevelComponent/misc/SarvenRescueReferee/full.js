{
	"_id": "54d6831d2f89c55405f20a10",
	"searchStrings": "sarven rescue referee s sa sar sarv sarve sarven sarvenr sarvenre sarvenres sarvenresc sarvenrescu sarvenrescue sarvenrescuer sarvenrescuere sarvenrescueref sarvenrescuerefe sarvenrescuerefer",
	"index": true,
	"slug": "sarvenrescuereferee",
	"name": "SarvenRescueReferee",
	"js": "var SarvenRescueReferee, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nSarvenRescueReferee = (function(_super) {\n  __extends(SarvenRescueReferee, _super);\n\n  function SarvenRescueReferee() {\n    _ref = SarvenRescueReferee.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  SarvenRescueReferee.className = 'SarvenRescueReferee';\n\n  SarvenRescueReferee.prototype.chooseAction = function() {\n    var _base;\n    this.configure();\n    this.checkVictory();\n    this.checkPotions();\n    this.checkPatrols();\n    this.jibberJabber();\n    if (this.actors.banditLeader.health <= 0 && this.actors.banditMarauder.health <= 0 && this.actors.banditLooter.health <= 0 && this.actors.banditWanderer.health <= 0 && !this.triggerFollow) {\n      return this.triggerFollow = true;\n    } else if (this.triggerFollow && !this.actors.peasant.isAttackable) {\n      this.actors.peasant.say(\"Thank you for saving me! Lead the way!\");\n      this.actors.peasant.isAttackable = true;\n      return this.instabuild('x-mark-red', 22, 104);\n    } else if (this.triggerFollow) {\n      if (this.hero.distanceTo(this.actors.peasant) > 7) {\n        return this.actors.peasant.move(Vector.subtract(this.actors.peasant.pos, this.hero.pos).normalize().multiply(7).add(this.hero.pos));\n      }\n    } else if (this.actors.banditLeader.target === this.hero) {\n      return typeof (_base = this.actors.banditLeader).say === \"function\" ? _base.say(\"Kill the intruder!\") : void 0;\n    }\n  };\n\n  SarvenRescueReferee.prototype.setUpLevel = function() {\n    this.hero = this.world.getThangByID('Hero Placeholder');\n    this.statue = this.world.getThangByID('Vision of Referee');\n    this.actors = {\n      \"peasant\": this.world.getThangByID('Captured Peasant'),\n      \"patrolling\": this.world.getThangByID('Patrolling Bandit'),\n      \"wandering\": this.world.getThangByID('Wandering Bandit'),\n      \"scouring\": this.world.getThangByID('Scouring Bandit'),\n      \"banditLeader\": this.world.getThangByID('Bandit Leader'),\n      \"banditMarauder\": this.world.getThangByID('Bandit Marauder'),\n      \"banditLooter\": this.world.getThangByID('Bandit Looter'),\n      \"banditWanderer\": this.world.getThangByID('Bandit Wanderer'),\n      \"sandyak\": this.world.getThangByID('Ofgar')\n    };\n    this.patrolSpawns = {\n      'patrolling': false,\n      'wandering': false,\n      'scouring': false\n    };\n    this.potionEffects = [\"grow\", \"shrink\", \"haste\", \"slow\", \"regen\", \"heal\"];\n    this.lastPotion = false;\n    this.chestLooted = false;\n    this.killedYak = false;\n    this.actors.peasant.isAttackable = false;\n    return this.triggerFollow = false;\n  };\n\n  SarvenRescueReferee.prototype.configure = function() {\n    if (!!this.configured) {\n      return;\n    }\n    this.buffScouts();\n    return this.configured = true;\n  };\n\n  SarvenRescueReferee.prototype.jibberJabber = function() {\n    var emote, emotes, now, _i, _len, _results;\n    now = Math.round(this.world.age);\n    emotes = [\n      {\n        time: 10,\n        actor: this.actors.peasant,\n        message: \"Please, I just want to go home!\"\n      }, {\n        time: 16,\n        actor: this.actors.banditLeader,\n        message: \"We aren't finished with you yet\"\n      }, {\n        time: 22,\n        actor: this.actors.peasant,\n        message: \"I don't have any valuables, I swear!\"\n      }\n    ];\n    _results = [];\n    for (_i = 0, _len = emotes.length; _i < _len; _i++) {\n      emote = emotes[_i];\n      if (now === emote.time) {\n        _results.push(emote.actor.say(emote.message));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  SarvenRescueReferee.prototype.buffScouts = function() {\n    return this.numBodyguardsSpawn = this.hero.maxHealth <= 1000 ? 1 : this.hero.maxHealth <= 1500 ? 3 : 4;\n  };\n\n  SarvenRescueReferee.prototype.checkPatrols = function() {\n    var i, _base, _base1, _base2, _i, _j, _k, _ref1, _ref2, _ref3;\n    if (this.actors.patrolling.target === this.hero && !this.patrolSpawns.patrolling) {\n      for (i = _i = 1, _ref1 = this.numBodyguardsSpawn; _i <= _ref1; i = _i += 1) {\n        this.spawnBodyguard(this.actors.patrolling);\n      }\n      if (typeof (_base = this.actors.patrolling).say === \"function\") {\n        _base.say(\"Enemy spotted!\");\n      }\n      return this.patrolSpawns.patrolling = true;\n    } else if (this.actors.wandering.target === this.hero && !this.patrolSpawns.wandering) {\n      for (i = _j = 1, _ref2 = this.numBodyguardsSpawn; _j <= _ref2; i = _j += 1) {\n        this.spawnBodyguard(this.actors.wandering);\n      }\n      if (typeof (_base1 = this.actors.wandering).say === \"function\") {\n        _base1.say(\"Enemy spotted!\");\n      }\n      return this.patrolSpawns.wandering = true;\n    } else if (this.actors.scouring.target === this.hero && !this.patrolSpawns.scouring) {\n      for (i = _k = 1, _ref3 = this.numBodyguardsSpawn; _k <= _ref3; i = _k += 1) {\n        this.spawnBodyguard(this.actors.scouring);\n      }\n      if (typeof (_base2 = this.actors.scouring).say === \"function\") {\n        _base2.say(\"Enemy spotted!\");\n      }\n      return this.patrolSpawns.scouring = true;\n    }\n  };\n\n  SarvenRescueReferee.prototype.spawnBodyguard = function(patrol) {\n    var bodyguard, r1, r2, v;\n    r1 = this.world.rand.randf2(-1, 2);\n    r2 = this.world.rand.randf2(-1, 2);\n    v = Vector.subtract(patrol.pos, this.hero.pos).normalize().multiply(4).add(patrol.pos);\n    bodyguard = this.instabuild('ogre-thrower', v.x + r1, v.y + r2);\n    return bodyguard.attack(this.hero);\n  };\n\n  SarvenRescueReferee.prototype.checkChest = function() {\n    var chests, t;\n    chests = (function() {\n      var _i, _len, _ref1, _results;\n      _ref1 = this.world.thangs;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        t = _ref1[_i];\n        if (t.spriteName === 'Ogre Treasure Chest' && t.exists) {\n          _results.push(t);\n        }\n      }\n      return _results;\n    }).call(this);\n    return !chests.length < 1;\n  };\n\n  SarvenRescueReferee.prototype.checkPotions = function() {\n    var potions, r, t;\n    potions = (function() {\n      var _i, _len, _ref1, _results;\n      _ref1 = this.world.thangs;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        t = _ref1[_i];\n        if (t.spriteName === 'Health Potion Medium' && t.exists) {\n          _results.push(t);\n        }\n      }\n      return _results;\n    }).call(this);\n    if (!this.potions) {\n      return this.potions = potions.length;\n    } else if (potions.length < this.potions) {\n      r = Math.round(this.world.rand.randf2(0, 5));\n      if (this.lastPotion) {\n        while (r === this.lastPotion) {\n          r = Math.round(this.world.rand.randf2(0, 5));\n        }\n      }\n      this.activatePotion(r);\n      return this.potions = potions.length;\n    }\n  };\n\n  SarvenRescueReferee.prototype.activatePotion = function(r) {\n    if (this.potionEffects[r] !== \"slow\" && this.potionEffects[r] !== \"heal\" && this.potionEffects[r] !== \"grow\") {\n      this.spells[this.potionEffects[r]].duration = 10;\n    }\n    this.cast(this.potionEffects[r], this.hero);\n    this[\"perform_\" + this.potionEffects[r]]();\n    this.statue.setTarget(null);\n    this.statue.setAction(\"idle\");\n    return this.lastPotion = r;\n  };\n\n  SarvenRescueReferee.prototype.checkVictory = function() {\n    if (this.actors.peasant.health <= 0 || this.hero.health <= 0) {\n      return this.setGoalState('escape', 'failure');\n    } else if (this.actors.sandyak.health <= 0 && !this.killedYak) {\n      this.setGoalState('yak', 'success');\n      return this.killedYak = true;\n    } else if (!this.checkChest() && !this.chestLooted) {\n      this.setGoalState('treasure', 'success');\n      return this.chestLooted = true;\n    } else if (this.rectangles['exit'].containsPoint(this.hero.pos)) {\n      if (this.actors.peasant.health > 0 && this.hero.distance(this.actors.peasant) > 15 && this.triggerFollow && this.actors.peasant.isAttackable) {\n        this.actors.peasant.pos = Vector.subtract(this.actors.peasant.pos, this.hero.pos).normalize().multiply(7).add(this.hero.pos);\n      }\n      if (this.rectangles['exit'].containsPoint(this.actors.peasant.pos)) {\n        return this.setGoalState('escape', 'success');\n      }\n    }\n  };\n\n  return SarvenRescueReferee;\n\n})(Component);\n",
	"system": "misc",
	"creator": "546d4b4fa06acfd60c5ea198",
	"original": "54bf249af79f9752056e59d1",
	"watchers": [
		"546d4b4fa06acfd60c5ea198",
		"512ef4805a67a8c507000001",
		"5162fab9c92b4c751e000274"
	],
	"__v": 0,
	"commitMessage": "Slight code cleanup / refactoring and commenting of methods",
	"parent": "54d274896e64805505055e38",
	"created": "2015-02-07T21:26:53.100Z",
	"version": {
		"isLatestMinor": true,
		"isLatestMajor": true,
		"minor": 27,
		"major": 0
	},
	"permissions": [
		{
			"access": "owner",
			"target": "546d4b4fa06acfd60c5ea198"
		},
		{
			"access": "read",
			"target": "public"
		}
	]
}