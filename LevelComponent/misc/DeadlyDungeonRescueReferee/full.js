{
	"_id": "55c3f696633ee6021f0cc32c",
	"searchStrings": "deadly dungeon rescue referee d de dea dead deadl deadly deadlyd deadlydu deadlydun deadlydung deadlydunge deadlydungeo deadlydungeon deadlydungeonr deadlydungeonre deadlydungeonres deadlydungeonresc deadlydungeonrescu deadlydungeonrescue deadlydungeonrescuer deadlydungeonrescuere deadlydungeonrescueref deadlydungeonrescuerefe deadlydungeonrescuerefer",
	"index": true,
	"slug": "deadlydungeonrescuereferee",
	"name": "DeadlyDungeonRescueReferee",
	"js": "var DeadlyDungeonRescueReferee, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nDeadlyDungeonRescueReferee = (function(_super) {\n  __extends(DeadlyDungeonRescueReferee, _super);\n\n  function DeadlyDungeonRescueReferee() {\n    _ref = DeadlyDungeonRescueReferee.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  DeadlyDungeonRescueReferee.className = 'DeadlyDungeonRescueReferee';\n\n  DeadlyDungeonRescueReferee.prototype.chooseAction = function() {\n    this.configure();\n    this.decrementTimers();\n    this.checkVictory();\n    this.checkDoors();\n    this.jibberJabber();\n    if (this.rectangles['torture_chamber'].containsPoint(this.hero.pos)) {\n      return this.triggerFollow = true;\n    } else if (this.triggerFollow) {\n      this.actors.peasant.isAttackable = true;\n      if (this.hero.distanceTo(this.actors.peasant) > 10) {\n        return this.actors.peasant.move(Vector.subtract(this.actors.peasant.pos, this.hero.pos).normalize().multiply(10).add(this.hero.pos));\n      }\n    }\n  };\n\n  DeadlyDungeonRescueReferee.prototype.setUpLevel = function() {\n    var door, _i, _len, _ref1;\n    this.hero = this.world.getThangByID('Hero Placeholder');\n    this.actors = {\n      \"peasant\": this.world.getThangByID('Tortured Peasant'),\n      \"torturemaster\": this.world.getThangByID('Torture Master'),\n      \"grug\": this.world.getThangByID('Grug'),\n      \"smerk\": this.world.getThangByID('Smerk'),\n      \"brawler\": this.world.getThangByID('Dungeon Brawler')\n    };\n    this.timers = {\n      \"brawlerTimer\": 0\n    };\n    this.doors = [this.world.getThangByID('North Vault Door'), this.world.getThangByID('South Vault Door'), this.world.getThangByID('Torture Room Door'), this.world.getThangByID('Exit Door')];\n    _ref1 = this.doors;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      door = _ref1[_i];\n      door.showsName = false;\n      door.addTrackedProperties(['showsName', 'boolean']);\n      door.keepTrackedProperty('showsName');\n    }\n    this.actors.peasant.isAttackable = false;\n    return this.triggerFollow = false;\n  };\n\n  DeadlyDungeonRescueReferee.prototype.configure = function() {\n    var team, _i, _len, _ref1;\n    if (!!this.configured) {\n      return;\n    }\n    this.inventorySystem = this.world.getSystem(\"Inventory\");\n    _ref1 = ['humans', 'ogres'];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      team = _ref1[_i];\n      this.inventorySystem.teamGold[team].income = 0;\n    }\n    return this.configured = true;\n  };\n\n  DeadlyDungeonRescueReferee.prototype.decrementTimers = function() {\n    var name, timer, _ref1, _results;\n    _ref1 = this.timers;\n    _results = [];\n    for (name in _ref1) {\n      timer = _ref1[name];\n      _results.push(this.timers[name] -= this.world.dt);\n    }\n    return _results;\n  };\n\n  DeadlyDungeonRescueReferee.prototype.checkDoors = function() {\n    var door, _i, _len, _ref1, _results;\n    _ref1 = this.doors;\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      door = _ref1[_i];\n      if (this.hero.distanceTo(door) <= 35) {\n        _results.push(door.showsName = true);\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  DeadlyDungeonRescueReferee.prototype.jibberJabber = function() {\n    var emote, emotes, now, _i, _len, _results;\n    now = Math.round(this.world.age);\n    emotes = [\n      {\n        time: 10,\n        actor: this.actors.peasant,\n        message: \"Please, I can't take anymore of it!\"\n      }, {\n        time: 13,\n        actor: this.actors.torturemaster,\n        message: \"Silence! You will give me the information I need\"\n      }, {\n        time: 18,\n        actor: this.actors.grug,\n        message: \"How did I get stuck on the night shift? *sigh*\"\n      }, {\n        time: 27,\n        actor: this.actors.smerk,\n        message: \"Wait! What's that? ... oh just a rat\"\n      }, {\n        time: 45,\n        actor: this.actors.torturemaster,\n        message: \"Hmm, let's try using these rusted spikes now..\"\n      }, {\n        time: 47,\n        actor: this.actors.peasant,\n        message: \"Urggrh!!\"\n      }, {\n        time: 54,\n        actor: this.actors.peasant,\n        message: \"*sobs*\"\n      }, {\n        time: 59,\n        actor: this.actors.grug,\n        message: \"*whistles*\"\n      }, {\n        time: 68,\n        actor: this.actors.smerk,\n        message: \"*hums*\"\n      }, {\n        time: 75,\n        actor: this.actors.grug,\n        message: \"*whistles*\"\n      }, {\n        time: 90,\n        actor: this.actors.peasant,\n        message: \"*sobs*\"\n      }, {\n        time: 118,\n        actor: this.actors.peasant,\n        message: \"*sobs*\"\n      }\n    ];\n    _results = [];\n    for (_i = 0, _len = emotes.length; _i < _len; _i++) {\n      emote = emotes[_i];\n      if (now === emote.time) {\n        _results.push(emote.actor.say(emote.message));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  DeadlyDungeonRescueReferee.prototype.checkVictory = function() {\n    if (this.rectangles['exit'].containsPoint(this.hero.pos) && this.triggerFollow && this.actors.peasant.health > 0) {\n      this.setGoalState('escape', 'success');\n      return this.setGoalState('stealth', 'success');\n    } else if (this.actors.peasant.health < 1) {\n      return this.setGoalState('escape', 'failure');\n    } else if (this.actors.grug.health < 1 || this.actors.smerk.health < 1) {\n      if (this.actors.grug.health < 1 && !this.timers.brawlerTimer) {\n        this.actors.brawler.pos.x = this.actors.grug.pos.x;\n        this.actors.brawler.pos.y = this.actors.grug.pos.y;\n        this.hero.isAttackable = false;\n        this.timers.brawlerTimer = 0.7;\n        this.actors.brawler.appearanceDelay = 0;\n        this.actors.brawler.say(\"HUMAN HURT GRUG... DIE!!\");\n      } else if (this.actors.smerk.health < 1 && !this.timers.brawlerTimer) {\n        this.actors.brawler.pos.x = this.actors.smerk.pos.x;\n        this.actors.brawler.pos.y = this.actors.smerk.pos.y;\n        this.hero.isAttackable = false;\n        this.timers.brawlerTimer = 0.7;\n        this.actors.brawler.appearanceDelay = 0;\n        this.actors.brawler.say(\"HUMAN HURT SMERK... DIE!!\");\n      } else if (this.timers.brawlerTimer && this.timers.brawlerTimer <= 0) {\n        this.hero.isAttackable = true;\n      }\n      return this.setGoalState('stealth', 'failure');\n    } else if (this.hero.gold >= 52) {\n      return this.setGoalState('loot', 'success');\n    }\n  };\n\n  return DeadlyDungeonRescueReferee;\n\n})(Component);\n",
	"system": "misc",
	"creator": "512ef4805a67a8c507000001",
	"original": "54b57915bc6fbd40cc5aeb6e",
	"watchers": [
		"512ef4805a67a8c507000001",
		"5162fab9c92b4c751e000274"
	],
	"__v": 0,
	"commitMessage": "Renaming the vault doors.",
	"parent": "55341ac2600852990567cf4f",
	"created": "2015-08-07T00:06:46.750Z",
	"version": {
		"isLatestMinor": true,
		"isLatestMajor": true,
		"minor": 21,
		"major": 0
	},
	"permissions": [
		{
			"access": "owner",
			"target": "546d4b4fa06acfd60c5ea198"
		},
		{
			"access": "read",
			"target": "public"
		}
	]
}