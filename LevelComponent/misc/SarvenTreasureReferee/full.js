{
	"_id": "54e8fefcf6dcb0fd091910ef",
	"slug": "sarventreasurereferee",
	"searchStrings": "sarven treasure referee s sa sar sarv sarve sarven sarvent sarventr sarventre sarventrea sarventreas sarventreasu sarventreasur sarventreasure sarventreasurer sarventreasurere sarventreasureref sarventreasurerefe sarventreasurerefer",
	"name": "SarvenTreasureReferee",
	"js": "var SarvenTreasureReferee, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nSarvenTreasureReferee = (function(_super) {\n  __extends(SarvenTreasureReferee, _super);\n\n  function SarvenTreasureReferee() {\n    _ref = SarvenTreasureReferee.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  SarvenTreasureReferee.className = 'SarvenTreasureReferee';\n\n  SarvenTreasureReferee.prototype.chooseAction = function() {\n    this.configure();\n    this.decrementTimers();\n    this.updateCoinCounts();\n    this.handleTeleports();\n    return this.spawnEventCoins();\n  };\n\n  SarvenTreasureReferee.prototype.setUpLevel = function() {\n    this.hero = this.world.getThangByID('Hero Placeholder');\n    this.disableEnemies = false;\n    this.timers = {\n      \"coinSpawn\": 0,\n      \"wrapCooldown\": 0\n    };\n    this.currentCoins = {\n      \"left\": 0,\n      \"middle\": 0,\n      \"right\": 0\n    };\n    this.maxCoins = {\n      \"left\": 10,\n      \"middle\": 20,\n      \"right\": 10\n    };\n    this.coinValues = {\n      \"bronze-coin\": 1,\n      \"silver-coin\": 2,\n      \"gold-coin\": 3\n    };\n    this.wrapPending = false;\n    this.heroGold = 0;\n    this.coinCooldown = 0.65;\n    return this.startGold = 0;\n  };\n\n  SarvenTreasureReferee.prototype.configure = function() {\n    if (!!this.configured) {\n      return;\n    }\n    if (!this.disableEnemies) {\n      this.spawnWaveNamed(\"enemies\");\n      this.spawnWaveNamed(\"headhunters\");\n    }\n    return this.configured = true;\n  };\n\n  SarvenTreasureReferee.prototype.decrementTimers = function() {\n    var name, timer, _ref1, _results;\n    _ref1 = this.timers;\n    _results = [];\n    for (name in _ref1) {\n      timer = _ref1[name];\n      _results.push(this.timers[name] -= this.world.dt);\n    }\n    return _results;\n  };\n\n  SarvenTreasureReferee.prototype.updateCoinCounts = function() {\n    var leftCoins, middleCoins, rightCoins, t;\n    leftCoins = (function() {\n      var _i, _len, _ref1, _results;\n      _ref1 = this.world.thangs;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        t = _ref1[_i];\n        if ((t.spriteName === \"Gold Coin\" || t.spriteName === \"Silver Coin\" || t.spriteName === \"Bronze Coin\") && t.exists && t !== this.hero && this.rectangles[\"coins-left\"].containsPoint(t.pos)) {\n          _results.push(t);\n        }\n      }\n      return _results;\n    }).call(this);\n    middleCoins = (function() {\n      var _i, _len, _ref1, _results;\n      _ref1 = this.world.thangs;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        t = _ref1[_i];\n        if ((t.spriteName === \"Gold Coin\" || t.spriteName === \"Silver Coin\" || t.spriteName === \"Bronze Coin\") && t.exists && t !== this.hero && this.rectangles[\"coins-middle\"].containsPoint(t.pos)) {\n          _results.push(t);\n        }\n      }\n      return _results;\n    }).call(this);\n    rightCoins = (function() {\n      var _i, _len, _ref1, _results;\n      _ref1 = this.world.thangs;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        t = _ref1[_i];\n        if ((t.spriteName === \"Gold Coin\" || t.spriteName === \"Silver Coin\" || t.spriteName === \"Bronze Coin\") && t.exists && t !== this.hero && this.rectangles[\"coins-right\"].containsPoint(t.pos)) {\n          _results.push(t);\n        }\n      }\n      return _results;\n    }).call(this);\n    this.currentCoins.left = leftCoins.length;\n    this.currentCoins.middle = middleCoins.length;\n    return this.currentCoins.right = rightCoins.length;\n  };\n\n  SarvenTreasureReferee.prototype.spawnEventCoins = function() {\n    var buildLeft, buildMiddle, buildRight;\n    if (this.timers.coinSpawn <= 0) {\n      buildLeft = this.spawnCoin('left');\n      buildMiddle = this.spawnCoin('middle');\n      buildRight = this.spawnCoin('right');\n      if (buildLeft || buildMiddle || buildRight) {\n        return this.timers.coinSpawn = this.coinCooldown;\n      }\n    }\n  };\n\n  SarvenTreasureReferee.prototype.spawnCoin = function(location) {\n    var buildType, buildp;\n    if (this.currentCoins[location] < this.maxCoins[location]) {\n      buildType = this.pickCoinType();\n      buildp = this.pickPointFromRegions([this.rectangles['coins-' + location]]);\n      this.currentCoins[location] += 1;\n      this.instabuild(buildType, buildp.x, buildp.y);\n    }\n    return typeof buildp === \"function\" ? buildp(false) : void 0;\n  };\n\n  SarvenTreasureReferee.prototype.pickCoinType = function() {\n    var r;\n    r = this.world.rand.randf();\n    if (r < .65) {\n      return 'bronze-coin';\n    } else if (r < .85) {\n      return 'silver-coin';\n    } else {\n      return 'gold-coin';\n    }\n  };\n\n  SarvenTreasureReferee.prototype.handleTeleports = function() {\n    var newPos, rect, _base, _ref1;\n    if (this.wrapPending) {\n      if (!this.hero.teleport) {\n        if ((_base = this.hero).teleport == null) {\n          _base.teleport = true;\n        }\n        this.hero.addTrackedProperties(['teleport', 'boolean']);\n        this.hero.keepTrackedProperty('teleport');\n      }\n      rect = {\n        'top-left': 'teleport-bottom-right',\n        'top-right': 'teleport-bottom-left',\n        'bottom-left': 'teleport-top-right',\n        'bottom-right': 'teleport-top-left'\n      }[this.wrapPending];\n      newPos = this.pickPointFromRegions([this.rectangles[rect]]);\n      this.hero.pos = newPos;\n      this.wrapPending = false;\n      if ((_ref1 = this.hero.action) === \"move\" || _ref1 === \"idle\") {\n        this.hero.endCurrentPlan();\n      }\n      this.timers.wrapCooldown = 3;\n    }\n    if (this.rectangles[\"teleport-top-left\"].containsPoint(this.hero.pos) && this.timers.wrapCooldown <= 0) {\n      return this.wrapPending = 'top-left';\n    } else if (this.rectangles[\"teleport-top-right\"].containsPoint(this.hero.pos) && this.timers.wrapCooldown <= 0) {\n      return this.wrapPending = 'top-right';\n    } else if (this.rectangles[\"teleport-bottom-left\"].containsPoint(this.hero.pos) && this.timers.wrapCooldown <= 0) {\n      return this.wrapPending = 'bottom-left';\n    } else if (this.rectangles[\"teleport-bottom-right\"].containsPoint(this.hero.pos) && this.timers.wrapCooldown <= 0) {\n      return this.wrapPending = 'bottom-right';\n    }\n  };\n\n  SarvenTreasureReferee.prototype.checkVictory = function() {\n    if (this.hero.health <= 0) {\n      return this.setGoalState('survive', 'failure');\n    } else if (this.hero.gold >= 150) {\n      this.setGoalState('survive', 'success');\n      return this.setGoalState('collect-gold', 'success');\n    }\n  };\n\n  return SarvenTreasureReferee;\n\n})(Component);\n",
	"system": "misc",
	"creator": "512ef4805a67a8c507000001",
	"original": "54d42be5af927b5905c6ef8d",
	"watchers": [
		"546d4b4fa06acfd60c5ea198",
		"512ef4805a67a8c507000001",
		"5162fab9c92b4c751e000274"
	],
	"__v": 0,
	"commitMessage": "Moving the hero before choosing its next action.",
	"index": true,
	"parent": "54e540dcceab105605ec8b67",
	"created": "2015-02-21T21:56:12.404Z",
	"version": {
		"isLatestMinor": true,
		"isLatestMajor": true,
		"minor": 20,
		"major": 0
	},
	"permissions": [
		{
			"access": "owner",
			"target": "546d4b4fa06acfd60c5ea198"
		},
		{
			"access": "read",
			"target": "public"
		}
	]
}