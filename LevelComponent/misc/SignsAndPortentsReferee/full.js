{
	"_id": "550b6b8e8a7d3c197a824d8f",
	"searchStrings": "signs and portents referee s si sig sign signs signsa signsan signsand signsandp signsandpo signsandpor signsandport signsandporte signsandporten signsandportent signsandportents signsandportentsr signsandportentsre signsandportentsref signsandportentsrefe signsandportentsrefer",
	"index": true,
	"slug": "signsandportentsreferee",
	"name": "SignsAndPortentsReferee",
	"js": "var SignsAndPortentsReferee, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nSignsAndPortentsReferee = (function(_super) {\n  __extends(SignsAndPortentsReferee, _super);\n\n  function SignsAndPortentsReferee() {\n    _ref = SignsAndPortentsReferee.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  SignsAndPortentsReferee.className = 'SignsAndPortentsReferee';\n\n  SignsAndPortentsReferee.prototype.chooseAction = function() {\n    var ally, name, time, wave, _i, _len, _ref1, _ref2, _results;\n    if (!this.didSetUp) {\n      this.setUp();\n    }\n    this.checkCollections();\n    this.checkAllyActivation();\n    _ref1 = ['ninja', 'librarian', 'trapper', 'alchemist'];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      ally = _ref1[_i];\n      this.controlAlly(ally);\n    }\n    this.controlSkeletons();\n    this.checkWaveActivation();\n    _ref2 = this.waveTimers;\n    _results = [];\n    for (name in _ref2) {\n      time = _ref2[name];\n      wave = this.waves[name][0];\n      if (wave && this.world.age >= (wave.time + time)) {\n        this.spawnWave(wave);\n        _results.push(this.waves[name].shift());\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  SignsAndPortentsReferee.prototype.setUp = function() {\n    this.didSetUp = true;\n    this.hero = this.world.getThangByID('Hero Placeholder');\n    this.hero.gemsCollected = 0;\n    this.ninja = this.world.getThangByID('Amara');\n    this.hush = this.world.getThangByID('Hushbaum');\n    this.trapper = this.world.getThangByID('Senick');\n    this.alchemist = this.world.getThangByID('Omarn');\n    this.waveTriggers = {\n      3: 'ninja',\n      40: 'librarian',\n      64: 'trapper'\n    };\n    this.allyTriggers = {\n      10: 'ninja',\n      36: 'librarian',\n      64: 'trapper',\n      68: 'alchemist'\n    };\n    this.buildTypeNames = {\n      M: ['ogre-munchkin-f', 'ogre-munchkin-m'],\n      C: ['ogre-scout-f', 'ogre-scout-m'],\n      T: ['ogre-thrower'],\n      O: ['ogre-m'],\n      S: ['ogre-shaman'],\n      F: ['ogre-f'],\n      K: ['skeleton']\n    };\n    this.waves = {\n      ninja: [\n        {\n          time: 1,\n          regions: ['ninjaSpawn'],\n          ogres: 'MMMMMMM'\n        }, {\n          time: 3,\n          regions: ['ninjaSpawn'],\n          ogres: 'CC'\n        }, {\n          time: 5,\n          regions: ['ninjaSpawn'],\n          ogres: 'O'\n        }, {\n          time: 8,\n          regions: ['ninjaSpawn'],\n          ogres: 'CC'\n        }\n      ],\n      librarian: [\n        {\n          time: 1,\n          regions: ['librarianSpawn'],\n          ogres: 'CCOMM'\n        }, {\n          time: 3,\n          regions: ['librarianSpawn'],\n          ogres: 'SS'\n        }, {\n          time: 6,\n          regions: ['librarianSpawn'],\n          ogres: 'MMMTT'\n        }\n      ],\n      trapper: [\n        {\n          time: 3,\n          regions: ['trapperSpawn'],\n          ogres: 'KKKK'\n        }, {\n          time: 6,\n          regions: ['trapperOgreSpawn'],\n          ogres: 'FFF'\n        }, {\n          time: 8,\n          regions: ['alchemistSpawn'],\n          ogres: 'MMM'\n        }\n      ]\n    };\n    this.allies = {\n      ninja: [\n        {\n          time: 0.5,\n          state: 'ninjaEntry'\n        }, {\n          time: 1,\n          state: 'ninjaGreeting'\n        }, {\n          time: 2,\n          state: 'ninjaFight'\n        }\n      ],\n      librarian: [\n        {\n          time: 0.5,\n          state: 'librarianGreeting'\n        }, {\n          time: 2,\n          state: 'librarianFight'\n        }\n      ],\n      trapper: [\n        {\n          time: 0.1,\n          state: 'trapperGreeting'\n        }, {\n          time: 1,\n          state: 'trapperCharge'\n        }, {\n          time: 5.5,\n          state: 'trapperFight'\n        }\n      ],\n      alchemist: [\n        {\n          time: 0,\n          state: 'alchemistCharge'\n        }, {\n          time: 1.5,\n          state: 'alchemistGreeting'\n        }, {\n          time: 2.5,\n          state: 'alchemistFight'\n        }\n      ]\n    };\n    this.waveTimers = {};\n    this.allyStates = {\n      ninja: 'allyStart',\n      librarian: 'allyStart'\n    };\n    return this.allyTimers = {};\n  };\n\n  SignsAndPortentsReferee.prototype.checkWaveActivation = function() {\n    var name, x, _ref1, _results;\n    _ref1 = this.waveTriggers;\n    _results = [];\n    for (x in _ref1) {\n      name = _ref1[x];\n      if (this.hero.pos.x > x && !this.waveTimers[name]) {\n        this.waveTimers[name] = this.world.age;\n        _results.push(console.log('activateNewWave', this.hero.pos.x, name, 'at time', this.world.age));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  SignsAndPortentsReferee.prototype.spawnWave = function(wave) {\n    var buildType, buildTypeChoices, buildTypes, choices, key, minion, region, regions, spawnPos, _i, _len, _results;\n    buildTypeChoices = (function() {\n      var _i, _len, _ref1, _results;\n      _ref1 = wave.ogres;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        key = _ref1[_i];\n        _results.push(this.buildTypeNames[key]);\n      }\n      return _results;\n    }).call(this);\n    buildTypes = (function() {\n      var _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = buildTypeChoices.length; _i < _len; _i++) {\n        choices = buildTypeChoices[_i];\n        _results.push(choices[this.world.rand.rand(choices.length)]);\n      }\n      return _results;\n    }).call(this);\n    _results = [];\n    for (_i = 0, _len = buildTypes.length; _i < _len; _i++) {\n      buildType = buildTypes[_i];\n      regions = (function() {\n        var _j, _len1, _ref1, _results1;\n        _ref1 = wave.regions;\n        _results1 = [];\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n          region = _ref1[_j];\n          _results1.push(this.rectangles[region]);\n        }\n        return _results1;\n      }).call(this);\n      spawnPos = this.pickPointFromRegions(regions);\n      this.buildXY(buildType, spawnPos.x, spawnPos.y);\n      _results.push(minion = this.performBuild());\n    }\n    return _results;\n  };\n\n  SignsAndPortentsReferee.prototype.checkCollections = function() {\n    if (this.hero.gemsCollected < this.hero.collectedThangIDs.length) {\n      this.hero.gemsCollected = this.hero.collectedThangIDs.length;\n      return this.gemWasCollected(_.last(this.hero.collectedThangIDs));\n    }\n  };\n\n  SignsAndPortentsReferee.prototype.gemWasCollected = function(gemID) {\n    var gem;\n    gem = this.world.getThangByID(gemID);\n    return typeof gem.wasCollectedBy === \"function\" ? gem.wasCollectedBy(this.hero) : void 0;\n  };\n\n  SignsAndPortentsReferee.prototype.controlSkeletons = function() {\n    var e, enemies, moveVector, nearest, skeleton, _i, _len, _ref1, _results;\n    _ref1 = this.world.thangs;\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      skeleton = _ref1[_i];\n      if (!(skeleton.spriteName === \"Skeleton\" && skeleton.team !== 'humans' && !skeleton.dead)) {\n        continue;\n      }\n      skeleton.chooseAction = function() {};\n      enemies = skeleton.findEnemies();\n      if (this.hero.hasActiveLightstone) {\n        enemies = (function() {\n          var _j, _len1, _results1;\n          _results1 = [];\n          for (_j = 0, _len1 = enemies.length; _j < _len1; _j++) {\n            e = enemies[_j];\n            if (e.distance(this.hero) > 14) {\n              _results1.push(e);\n            }\n          }\n          return _results1;\n        }).call(this);\n      }\n      nearest = null;\n      if (this.hero.hasActiveLightstone && skeleton.distance(this.hero) < 14 && (!skeleton.target || skeleton.target.distance(this.hero) < 14)) {\n        moveVector = skeleton.pos.copy().subtract(this.hero.pos).normalize().multiply(5);\n        if (moveVector.y < 0) {\n          moveVector = new Vector(2, 5);\n        }\n        _results.push(skeleton.move(skeleton.pos.copy().add(moveVector)));\n      } else {\n        nearest = skeleton.findNearest(enemies);\n        if (nearest) {\n          _results.push(skeleton.attack(nearest));\n        } else if (!this.hero.dead) {\n          _results.push(skeleton.attack(this.hero));\n        } else {\n          _results.push(void 0);\n        }\n      }\n    }\n    return _results;\n  };\n\n  SignsAndPortentsReferee.prototype.checkAllyActivation = function() {\n    var name, x, _ref1, _results;\n    _ref1 = this.allyTriggers;\n    _results = [];\n    for (x in _ref1) {\n      name = _ref1[x];\n      if (this.hero.pos.x > x && !this.allyTimers[name]) {\n        _results.push(this.allyTimers[name] = this.world.age);\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  SignsAndPortentsReferee.prototype.allyStart = function() {};\n\n  SignsAndPortentsReferee.prototype.controlAlly = function(ally) {\n    var action, _name;\n    action = this.allies[ally][0];\n    if (action && this.world.age > (this.allyTimers[ally] + action.time)) {\n      this.allyStates[ally] = action.state;\n      this.allies[ally].shift();\n    }\n    return typeof this[_name = this.allyStates[ally]] === \"function\" ? this[_name]() : void 0;\n  };\n\n  SignsAndPortentsReferee.prototype.ninjaEntry = function() {\n    this.ninja.setTargetPos({\n      x: 15,\n      y: 30\n    });\n    this.ninja.setAction('move');\n    return this.ninja.act();\n  };\n\n  SignsAndPortentsReferee.prototype.ninjaGreeting = function() {\n    return this.ninja.say('I\\'ll cover you, go!');\n  };\n\n  SignsAndPortentsReferee.prototype.ninjaFight = function() {\n    var distance, enemies, max, nearest, ninja;\n    ninja = this.world.getThangByID('Amara');\n    enemies = ninja.findEnemies();\n    nearest = ninja.findNearest(enemies);\n    max = this.findMaxHP(enemies);\n    if (nearest) {\n      distance = ninja.distanceTo(nearest);\n      if (enemies.length > 1 && distance < ninja.throwRange && distance > 9) {\n        ninja.say('self.THROW(enemy)');\n        return ninja[\"throw\"](nearest);\n      } else {\n        return ninja.attack(nearest);\n      }\n    }\n  };\n\n  SignsAndPortentsReferee.prototype.librarianGreeting = function() {\n    return this.hush.say('Quickly, now! Keep moving!');\n  };\n\n  SignsAndPortentsReferee.prototype.librarianFight = function() {\n    var dist, enemies, hush, nearest;\n    hush = this.world.getThangByID('Hushbaum');\n    enemies = hush.findEnemies();\n    nearest = hush.findNearest(enemies);\n    if (nearest) {\n      dist = hush.distanceTo(nearest);\n      if (dist < hush.spells.shockwave.range && hush.canCast('shockwave')) {\n        hush.say('self.cast(\"SHOCKWAVE\", enemy)');\n        return hush.cast('shockwave', nearest);\n      } else if (hush.canCast('magic-missile') && dist < hush.spells['magic-missile'].range) {\n        hush.say('self.cast(\"MAGIC-MISSILE\", enemy)');\n        return hush.cast('magic-missile', nearest);\n      } else if (hush.distanceTo(nearest) < hush.attackRange) {\n        return hush.attack(nearest);\n      }\n    }\n  };\n\n  SignsAndPortentsReferee.prototype.trapperGreeting = function() {\n    this.trapper.say('Grab that lightstone and follow me!');\n    this.trapper.setTargetPos({\n      x: 95,\n      y: 18\n    });\n    this.trapper.setAction('move');\n    return this.trapper.act();\n  };\n\n  SignsAndPortentsReferee.prototype.trapperCharge = function() {\n    this.trapper.setTargetPos({\n      x: 96,\n      y: this.trapper.pos.x < 94 ? 18 : 23\n    });\n    this.trapper.setAction('move');\n    return this.trapper.act();\n  };\n\n  SignsAndPortentsReferee.prototype.trapperFight = function() {\n    var e, enemies, nearest, _ref1;\n    enemies = this.trapper.findEnemies();\n    nearest = this.trapper.findNearest(enemies);\n    if (nearest && nearest.team === 'neutral' && ((_ref1 = nearest.target) != null ? _ref1.team : void 0) === 'ogres') {\n      nearest = this.trapper.findNearest(((function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = enemies.length; _i < _len; _i++) {\n          e = enemies[_i];\n          if (e.team === 'ogres') {\n            _results.push(e);\n          }\n        }\n        return _results;\n      })()) || nearest);\n    }\n    if (nearest) {\n      if (this.hero.distance({\n        x: 90,\n        y: 18\n      }) < 5 && this.trapper.health < 60) {\n        this.trapper.health = 60;\n        this.trapper.attackDamage = 60;\n      }\n      return this.trapper.attack(nearest);\n    }\n  };\n\n  SignsAndPortentsReferee.prototype.alchemistCharge = function() {\n    this.alchemist.setTargetPos({\n      x: 93,\n      y: 23.44\n    });\n    this.alchemist.setAction('move');\n    return this.alchemist.act();\n  };\n\n  SignsAndPortentsReferee.prototype.alchemistGreeting = function() {\n    return this.alchemist.say('Stand near me with the lightstone.');\n  };\n\n  SignsAndPortentsReferee.prototype.alchemistFight = function() {\n    var dist, enemies, nearest;\n    enemies = this.alchemist.findEnemies();\n    nearest = this.alchemist.findNearest(enemies);\n    if (!this.trapper.dead && this.trapper.health < this.trapper.maxHealth && this.alchemist.canCast('regen')) {\n      this.alchemist.say('self.cast(\"REGEN\", \"Senick\")');\n      return this.alchemist.cast('regen', this.trapper);\n    } else if (nearest) {\n      if (this.hero.distance({\n        x: 90,\n        y: 18\n      }) < 5 && this.alchemist.health < 60) {\n        this.alchemist.health = 60;\n        this.alchemist.attackDamage = 60;\n      }\n      dist = this.alchemist.distanceTo(nearest);\n      return this.alchemist.attack(nearest);\n    }\n  };\n\n  SignsAndPortentsReferee.prototype.findMaxHP = function(thangs) {\n    var enemy, max, t, _i, _len;\n    if (!thangs) {\n      return null;\n    }\n    max = 0;\n    enemy = null;\n    for (_i = 0, _len = thangs.length; _i < _len; _i++) {\n      t = thangs[_i];\n      if (t.health > max) {\n        max = t.health;\n        enemy = t;\n      }\n    }\n    return enemy;\n  };\n\n  SignsAndPortentsReferee.prototype.checkVictory = function() {\n    var enemiesLeft, name, t, wave, _ref1;\n    if (this.world.age < 1) {\n      return;\n    }\n    _ref1 = this.waves;\n    for (name in _ref1) {\n      wave = _ref1[name];\n      if (wave.length) {\n        return;\n      }\n    }\n    enemiesLeft = (function() {\n      var _i, _len, _ref2, _results;\n      _ref2 = this.world.thangs;\n      _results = [];\n      for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n        t = _ref2[_i];\n        if ((t.team === 'ogres' || t.team === 'neutral') && t.exists && t.health > 0) {\n          _results.push(t);\n        }\n      }\n      return _results;\n    }).call(this);\n    if (!enemiesLeft.length) {\n      this.setGoalState('ogres-and-skeletons-die', 'success');\n      return this.world.endWorld(true, 1);\n    } else {\n      if (!(this.world.age < 40)) {\n        console.log('CATSYNC: enemies left', enemiesLeft.length, 'at', this.world.age);\n      }\n      if (!(this.world.age < 40)) {\n        return console.log('CATSYNC: enemiesLeft[0]', enemiesLeft[0].id, enemiesLeft[0].spriteName, 'pos', JSON.stringify(enemiesLeft[0].pos));\n      }\n    }\n  };\n\n  return SignsAndPortentsReferee;\n\n})(Component);\n",
	"system": "misc",
	"creator": "512ef4805a67a8c507000001",
	"original": "54cfc78fad25d15505802f01",
	"watchers": [
		"54b1773a75e3055205e5a449",
		"512ef4805a67a8c507000001",
		"5162fab9c92b4c751e000274"
	],
	"__v": 0,
	"description": "Custom Referee for Signs and Portents Level",
	"codeLanguage": "coffeescript",
	"dependencies": [
		{
			"original": "54977ce657e90bd1903dea72",
			"majorVersion": 0
		}
	],
	"commitMessage": "Omarn also invincible if hero in right place",
	"parent": "5500ed0ef6db6738c6963f0d",
	"created": "2015-03-20T00:36:30.431Z",
	"version": {
		"isLatestMinor": true,
		"isLatestMajor": true,
		"minor": 22,
		"major": 0
	},
	"permissions": [
		{
			"access": "owner",
			"target": "54b1773a75e3055205e5a449"
		},
		{
			"access": "read",
			"target": "public"
		}
	]
}